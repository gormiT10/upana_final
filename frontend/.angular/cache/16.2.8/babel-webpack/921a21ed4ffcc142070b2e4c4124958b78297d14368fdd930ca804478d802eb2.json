{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate() {\n    // Tu lógica de autenticación aquí, devuelve true si el usuario está autenticado, de lo contrario, redirige a la página de inicio de sesión.\n    return true; // o false si no autenticado\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac"],"sources":["C:\\Users\\USUARIO\\Documents\\Proyectos Angular\\upana_final\\frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(): boolean {\n    // Tu lógica de autenticación aquí, devuelve true si el usuario está autenticado, de lo contrario, redirige a la página de inicio de sesión.\n    return true; // o false si no autenticado\n  }\n}\n"],"mappings":";;AAIA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,WAAWA,CAAA;IACT;IACA,OAAO,IAAI,CAAC,CAAC;EACf;EAAC,QAAAC,CAAA,G;qBANUJ,SAAS,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATT,SAAS;IAAAU,OAAA,EAATV,SAAS,CAAAW;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}